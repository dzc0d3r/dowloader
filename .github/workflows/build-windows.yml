name: Build Windows EXE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build .exe on windows-latest
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies + PyInstaller
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          pip install pyinstaller

      - name: Show env sanity (Python + Tk)
        shell: pwsh
        run: |
          python -V
          python -c "import tkinter, sys; print('tk version:', tkinter.TkVersion); print('argv example:', sys.argv[:1])"

      - name: Build exe with PyInstaller
        shell: pwsh
        run: |
          # Using downloader.py as the entrypoint and producing downloader.exe
          python -m PyInstaller --clean --onefile --noconsole --icon=app.ico downloader.py \
                 --hidden-import=ttkbootstrap \
                 --hidden-import=PIL._tkinter_finder \
                 --hidden-import=PIL.ImageTk \
                 --hidden-import=PIL._imagingtk \
                 --hidden-import=tkinter \
                 --hidden-import=_tkinter \
                 --add-data "spinner.gif:."
          # If you have an icon file: add --icon icon.ico

      - name: Verify build artifact
        shell: pwsh
        run: |
          if (-not (Test-Path 'dist\downloader.exe')) {
            Write-Error 'Build failed: dist\downloader.exe not found'
            exit 1
          } else {
            Write-Host 'Build succeeded: dist\downloader.exe'
          }

      - name: Package artifact (zip)
        shell: pwsh
        run: |
          if (Test-Path 'artifact.zip') { Remove-Item -Force artifact.zip }
          Compress-Archive -Path 'dist\downloader.exe' -DestinationPath 'artifact.zip' -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: artifact.zip
